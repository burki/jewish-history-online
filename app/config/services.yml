# app/config/services.yml
services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
        bind:
            $rootDir: '%kernel.root_dir%'
            $dbconnAdmin: '@dbconn.admin'
            
    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    # together with the above _defaults, this is needed for Command-classes to work as in Sf 3.4
    AppBundle\:
        resource: '%kernel.project_dir%/src/AppBundle'
        exclude: '%kernel.project_dir%/src/AppBundle/{Entity,Migrations,Tests}'

    dbconn.admin:
        class: Doctrine\DBAL\Connection
        factory: Doctrine\DBAL\DriverManager::getConnection
        arguments:
            $params:
                host:     '%database.host%'
                port:     '%database.port%'
                dbname:   '%database.admin_name%'
                user:     '%database.admin_user%'
                password: '%database.password%'
                driver:  pdo_mysql
                charset:  '%database.charset%' # UTF8
                options:
                        1002: "SET NAMES '%database.charset%' COLLATE '%database.charset%_unicode_ci'"
                default_table_options:
                    charset: '%database.charset%'
                    collate: '%database.charset%_unicode_ci'
                    engine:  MyISAM     # InnoDB

    twig.extension.text:
        class: Twig_Extensions_Extension_Text
        tags:
            - { name: twig.extension }

    # language-specific layout in 404
    app.language.kernel_request_listener:
        class: AppBundle\EventListener\LanguageListener
        tags:
          - { name: kernel.event_listener, event: kernel.exception, method: setLocale }

    AppBundle\Utils\ImageMagick\ImageMagickProcessor:
        arguments:    [ "%app.imagemagick.processor.arguments%" ]
        
    app.xslt_adapter:
        class:        "%app.xslt.adapter.class%"
        arguments:    [ "%app.xslt.adapter.arguments%" ]
    AppBundle\Utils\Xsl\XsltProcessor:
        calls:
            - [ setAdapter, [ '@app.xslt_adapter' ]]

    app.xml_formatter_adapter:
        class:        "%app.xml_formatter.adapter.class%"
        arguments:    [ "%app.xml_formatter.adapter.arguments%" ]
    AppBundle\Utils\XmlFormatter\XmlFormatter:
        calls:
            - [ setAdapter, [ '@app.xml_formatter_adapter' ]]

    AppBundle\Utils\SimplifyGeojsonProcessor:
        arguments:    [ "%app.simplify_geojson.processor.arguments%" ]

    AppBundle\Menu\Builder:
        arguments: [ "@knp_menu.factory", "@translator.default", "@request_stack", "@router"  ]
        tags:
            # The alias is what is used to retrieve the menu
            - { name: knp_menu.menu_builder, method: createTopMenu, alias: top } 
            - { name: knp_menu.menu_builder, method: createMainMenu, alias: main }
            - { name: knp_menu.menu_builder, method: createBreadcrumbMenu, alias: breadcrumb }
            - { name: knp_menu.menu_builder, method: createFooterMainMenu, alias: footer-main }
